// <auto-generated />
using System;
using AjaxSampleCore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AjaxSampleCore.Migrations
{
    [DbContext(typeof(BookContext))]
    [Migration("20220905042528_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Japanese_CI_AS")
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AjaxSampleCore.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Author", (string)null);
                });

            modelBuilder.Entity("AjaxSampleCore.Models.Book", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<string>("PublisherCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.HasIndex("PublisherCode");

                    b.ToTable("Book", (string)null);
                });

            modelBuilder.Entity("AjaxSampleCore.Models.Publisher", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("Publisher", (string)null);
                });

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.Property<int>("AuthorsId")
                        .HasColumnType("int");

                    b.Property<string>("BooksCode")
                        .HasColumnType("char(10)");

                    b.HasKey("AuthorsId", "BooksCode");

                    b.HasIndex("BooksCode");

                    b.ToTable("Writing", (string)null);
                });

            modelBuilder.Entity("AjaxSampleCore.Models.Book", b =>
                {
                    b.HasOne("AjaxSampleCore.Models.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherCode")
                        .HasConstraintName("FK_Book_Publisher");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.HasOne("AjaxSampleCore.Models.Author", null)
                        .WithMany()
                        .HasForeignKey("AuthorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AjaxSampleCore.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AjaxSampleCore.Models.Publisher", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
